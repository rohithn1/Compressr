{"ast":null,"code":"var _jsxFileName = \"/Users/rohithnadimpally/Downloads/Compressr/react/client/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    id: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Compressr\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"Key\"), /*#__PURE__*/React.createElement(\"mark\", {\n    id: \"importance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"This is important.\"), /*#__PURE__*/React.createElement(\"strike\", {\n    id: \"importance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"This can be condensed.\")), /*#__PURE__*/React.createElement(QueryForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n}\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.SubmitHandler = event => {\n      event.preventDefault();\n      var text = ReactDOM.findDOMNode(this.refs.input).value;\n      fetch('http://localhost:8080/api/analysis?text=' + text).then(res => res.json()).then(data => this.setState(() => {\n        console.log('FECTED DATA' + data);\n        var tempArray = [];\n        var inc = 0;\n\n        for (const sentence of data.sentences) {\n          tempArray.push(sentence.sentence);\n          inc++;\n        }\n\n        this.setState({\n          numOfSentences: inc\n        });\n        this.setState({\n          sentences: tempArray\n        });\n        tempArray = [];\n\n        for (const rank of data.sentences) {\n          tempArray.push(rank.rank);\n        }\n\n        this.setState({\n          ranks: tempArray\n        });\n        tempArray = [];\n\n        for (const word of data.entities) {\n          tempArray.push(word.word);\n        }\n\n        this.setState({\n          words: tempArray\n        });\n        tempArray = [];\n\n        for (const link of data.entities) {\n          tempArray.push(link.link);\n        }\n\n        this.setState({\n          metadata: tempArray\n        });\n        tempArray = [];\n      }));\n    };\n\n    this.state = {\n      sentences: [],\n      ranks: [],\n      words: [],\n      metadata: [],\n      numOfSentences: 0\n    }; //this.output = ''\n    //this.render()\n  } // callAPI() {\n  //   fetch (\"http://localhost:8080/api/analysis?text=Hello World!\")\n  //   .then(res => res.text())\n  //   .then(data => this.setState({sentences: data}))\n  // }\n  // componentWillMount() {\n  //   this.callAPI()\n  // }\n\n\n  render() {\n    var specialSentences = [];\n    var excessSentences = [];\n    var answerArray = [];\n    var expectedSpecialSentences = 0;\n    var expectedExcessSentences = 0;\n\n    if (this.state.sentences.length > 5) {\n      expectedSpecialSentences = this.state.sentences.length * 0.2;\n      expectedExcessSentences = expectedSpecialSentences - 1;\n\n      if (expectedSpecialSentences < 10) {\n        expectedSpecialSentences = 2;\n        expectedExcessSentences = 1;\n      }\n    }\n\n    var rankTolerance = 10.0;\n\n    while (specialSentences.length < expectedSpecialSentences) {\n      rankTolerance -= 0.5;\n\n      for (const element in this.state.sentences) {\n        if (rankTolerance < this.state.ranks[element]) {\n          specialSentences.push(this.state.sentences[element]);\n        }\n      }\n    }\n\n    rankTolerance = 2.0;\n\n    while (excessSentences.length < expectedExcessSentences) {\n      rankTolerance += 0.5;\n\n      for (const element in this.state.sentences) {\n        if (rankTolerance > this.state.ranks[element]) {\n          excessSentences.push(this.state.sentences[element]);\n\n          if (excessSentences.length >= expectedExcessSentences) {\n            break;\n          }\n        }\n      }\n    }\n\n    for (const element in this.state.sentences) {\n      var isSpecial = false;\n      var isExcess = false;\n\n      for (const specialElement of specialSentences) {\n        if (specialElement === this.state.sentences[element]) {\n          isSpecial = true;\n          answerArray.push('<mark>' + specialElement);\n        }\n      }\n\n      for (const excessElement of excessSentences) {\n        if (excessElement === this.state.sentences[element]) {\n          isExcess = true;\n          answerArray.push('<strike>' + excessElement);\n        }\n      }\n\n      if (!isSpecial && !isExcess) {\n        answerArray.push(this.state.sentences[element]);\n      }\n    }\n\n    var exists = false;\n    var noDuplicates = [];\n\n    for (const elem of answerArray) {\n      for (const element of noDuplicates) {\n        if (elem === element) {\n          exists = true;\n        }\n      }\n\n      if (!exists) {\n        noDuplicates.push(elem);\n      }\n\n      exists = false;\n    }\n\n    const listItems = noDuplicates.map((key, i) => {\n      if (key.includes('<mark>')) {\n        if (noDuplicates[i + 1] != null) {\n          if (noDuplicates[i + 1].includes('<mark>')) {\n            return /*#__PURE__*/React.createElement(\"pa\", {\n              id: i,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"mark\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 34\n              }\n            }, key.replace('<mark>', '') + ' '));\n          }\n        }\n\n        return /*#__PURE__*/React.createElement(\"pa\", {\n          id: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"mark\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 30\n          }\n        }, key.replace('<mark>', '')), \" \");\n      }\n\n      if (key.includes('<strike>')) {\n        return /*#__PURE__*/React.createElement(\"pa\", {\n          id: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"strike\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 30\n          }\n        }, key.replace('<strike>', '')), \" \");\n      }\n\n      return /*#__PURE__*/React.createElement(\"pa\", {\n        id: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      }, key + ' ');\n    });\n    const words = this.state.words.map((key, i) => {\n      if (!this.state.metadata[i].includes('undefined')) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          id: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: this.state.metadata[i],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 27\n          }\n        }, key), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 69\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"p\", {\n        id: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }, key);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"link\", {\n      rel: \"shortcut icon\",\n      href: \"/favicon.ico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"inputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.SubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"submitButton\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: \"input\",\n      id: \"input\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"Input text here.\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, listItems), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"words\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"keys\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, \"Key Terms\"), words))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rohithnadimpally/Downloads/Compressr/react/client/src/App.js"],"names":["React","ReactDOM","App","QueryForm","Component","constructor","props","SubmitHandler","event","preventDefault","text","findDOMNode","refs","input","value","fetch","then","res","json","data","setState","console","log","tempArray","inc","sentence","sentences","push","numOfSentences","rank","ranks","word","entities","words","link","metadata","state","render","specialSentences","excessSentences","answerArray","expectedSpecialSentences","expectedExcessSentences","length","rankTolerance","element","isSpecial","isExcess","specialElement","excessElement","exists","noDuplicates","elem","listItems","map","key","i","includes","replace"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header id='header'>Compressr</header>\n      <div>\n        <h>Key</h>\n        <mark id=\"importance\">This is important.</mark>\n        <strike id=\"importance\">This can be condensed.</strike>\n      </div>\n      <QueryForm/>\n    </div>\n  );\n}\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sentences: [],\n      ranks: [],\n      words: [],\n      metadata: [],\n      numOfSentences: 0\n  };\n    //this.output = ''\n    //this.render()\n  }\n\n  // callAPI() {\n  //   fetch (\"http://localhost:8080/api/analysis?text=Hello World!\")\n  //   .then(res => res.text())\n  //   .then(data => this.setState({sentences: data}))\n  // }\n  \n  // componentWillMount() {\n  //   this.callAPI()\n  // }\n\n  SubmitHandler = (event) => {\n    event.preventDefault();\n    var text = ReactDOM.findDOMNode(this.refs.input).value;\n    \n    fetch('http://localhost:8080/api/analysis?text='+text)\n    .then(res => res.json())\n    .then(data => this.setState( () => {\n      console.log('FECTED DATA' + data)\n      var tempArray = []\n      var inc = 0\n      for (const sentence of data.sentences) {\n        tempArray.push(sentence.sentence)\n        inc++\n      }\n      this.setState({numOfSentences: inc})\n      this.setState({sentences: tempArray})\n      tempArray = []\n\n      for (const rank of data.sentences) {\n        tempArray.push(rank.rank)\n      }\n      this.setState({ranks: tempArray})\n      tempArray = []\n\n      for (const word of data.entities) {\n        tempArray.push(word.word)\n      }\n      this.setState({words: tempArray})\n      tempArray = []\n\n      for (const link of data.entities) {\n        tempArray.push(link.link)\n      }\n      this.setState({metadata: tempArray})\n      tempArray = []\n    }))\n  }\n\n  render() {\n    var specialSentences = []\n    var excessSentences = []\n    var answerArray = []\n    var expectedSpecialSentences = 0\n    var expectedExcessSentences = 0\n\n    if (this.state.sentences.length > 5) {\n      expectedSpecialSentences = this.state.sentences.length*0.2\n      expectedExcessSentences = expectedSpecialSentences - 1 \n      if (expectedSpecialSentences < 10) {\n        expectedSpecialSentences = 2\n        expectedExcessSentences = 1\n      }\n    }\n\n    var rankTolerance = 10.0\n    while (specialSentences.length < expectedSpecialSentences) {\n      rankTolerance -= 0.5\n      for (const element in this.state.sentences) {\n        if (rankTolerance < this.state.ranks[element]) {\n          specialSentences.push(this.state.sentences[element])\n        }\n      }\n    }\n\n    rankTolerance = 2.0\n    while (excessSentences.length < expectedExcessSentences) {\n      rankTolerance += 0.5\n      for (const element in this.state.sentences) {\n        if (rankTolerance > this.state.ranks[element]) {\n          excessSentences.push(this.state.sentences[element])\n          if (excessSentences.length >= expectedExcessSentences) {\n            break;\n          }\n        }\n      }\n    }\n\n    for (const element in this.state.sentences) {\n      var isSpecial = false\n      var isExcess = false\n      for (const specialElement of specialSentences) {\n        if (specialElement === this.state.sentences[element]) {\n          isSpecial = true\n          answerArray.push('<mark>' + specialElement)\n        }\n      }\n      for (const excessElement of excessSentences) {\n        if (excessElement === this.state.sentences[element]) {\n          isExcess = true\n          answerArray.push('<strike>' + excessElement)\n        }\n      }\n      if (!isSpecial && !isExcess) {\n        answerArray.push(this.state.sentences[element])\n      }\n    }\n\n    var exists = false\n    var noDuplicates = []\n    for (const elem of answerArray) {\n      for (const element of noDuplicates) {\n        if (elem === element) {\n          exists = true\n        }\n      }\n      if (!exists) {\n        noDuplicates.push(elem)\n      }\n      exists = false\n    }\n\n    const listItems = noDuplicates.map((key, i) => {\n        if (key.includes('<mark>')) {\n          if (noDuplicates[i+1]  != null) {\n            if (noDuplicates[i+1].includes('<mark>')) {\n              return (<pa id={i}><mark>{key.replace('<mark>','') + ' '}</mark></pa>)\n            }\n          }\n          return (<pa id={i}><mark>{key.replace('<mark>','')}</mark> </pa>)\n        }\n        if (key.includes('<strike>')) {\n          return (<pa id={i}><strike>{key.replace('<strike>','')}</strike> </pa>)\n        }\n      return (<pa id={i}>{key + ' '}</pa>)\n    })\n\n    const words = this.state.words.map((key, i) => {\n      if (!this.state.metadata[i].includes('undefined')) {\n        return (<p id={i}><a href={this.state.metadata[i]}>{key}</a><br></br></p>)\n      }\n      return (<p id={i}>{key}</p>)\n    })\n\n    return (\n      <div className=\"App\">\n          <link rel=\"shortcut icon\" href=\"/favicon.ico\"></link>\n          <div id=\"inputForm\">\n            <form onSubmit={this.SubmitHandler}>\n              <input id=\"submitButton\" type='submit'/>\n            </form>\n            <div id=\"wrapper\">\n                <textarea ref=\"input\" id=\"input\" type=\"text\">Input text here.</textarea>\n\n                <div id=\"answer\">{listItems}</div>\n                <div id=\"words\">\n                <p id=\"keys\">Key Terms</p>\n                  {words}\n                  </div>\n              </div>\n          </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}